[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_38FFD7055357303922571043-if00
#serial: /dev/ttyAMA0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 280
max_accel: 3500
max_z_velocity: 9
max_z_accel: 40
#minimum_cruise_ratio: 0.5
#square_corner_velocity: 5.0

[stepper_x]
step_pin: PB3 #PA13
dir_pin: PB4 #PB12
enable_pin: !PD2 #!PB14
microsteps: 64
rotation_distance: 40
full_steps_per_rotation: 200
#endstop_pin: ^PC0
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
position_min: -25
position_endstop: -25
position_max: 215
homing_speed: 45.0

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 3 #0
run_current: 0.8
#hold_current: 0.6
stealthchop_threshold: 999999
diag_pin: ^PC15 #^PC0
driver_SGTHRS: 95

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 64
rotation_distance: 40
full_steps_per_rotation: 200
#endstop_pin: ^PC1
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
position_endstop: 0
position_max: 283
homing_speed: 45.0

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.8
#hold_current: 0.6
stealthchop_threshold: 999999
diag_pin: ^PC1
driver_SGTHRS: 90

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 64
rotation_distance: 2
full_steps_per_rotation: 200
# endstop_pin: ^gpio25
# position_endstop: 0
endstop_pin: probe:z_virtual_endstop
position_min: -5.0
position_max: 280
homing_speed: 8

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.90
hold_current: 0.500
stealthchop_threshold: 999999

#[stepper_z1]
#step_pin: PB3
#dir_pin: PB4
#enable_pin: !PD2
#microsteps: 64
#rotation_distance: 2
#full_steps_per_rotation: 200

#[tmc2209 stepper_z1]
#uart_pin: PC11
#tx_pin: PC10
#uart_address: 3
#run_current: 0.8
#hold_current: 0.500
#stealthchop_threshold: 999999

#[filament_switch_sensor runout_sensor]
#switch_pin: ^PC15
#pause_on_runout: True

# [filament_motion_sensor smart_sensor]
# switch_pin: ^PC15
# detection_length: 2.5

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
control: pid
pid_Kp: 237.44
pid_Ki: 23.37
pid_Kd: 602.97
min_temp: 0
max_temp: 115

#[fan]
#pin: PC6

#[heater_fan hotend_fan]
#pin: PC7
#heater: extruder
#heater_temp: 50.0

#[heater_fan controller_fan]
#pin: gpio20
#heater: heater_bed
#heater_temp: 45.0

#[temperature_fan controller] 
#pin: gpio20 
#control: watermark 
#max_delta: 3.0 
#sensor_type: temperature_mcu 
#sensor_mcu: mcu 
#min_temp: 0 
#max_temp: 85.0 
#target_temp: 40.0 
#max_power: 1 #for 100% 
#shutdown_speed: 1.0

[controller_fan my_controller_fan]
pin: PC6
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#enable_pin:
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 0.5
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_x, stepper_y, stepper_z
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

#[bltouch]
#sensor_pin: gpio22
#control_pin: gpio29

[neopixel board_rgb]
pin: PA8
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

[bed_mesh]
speed: 80
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#mesh_radius:
#   Defines the radius of the mesh to probe for round beds. Note that
#   the radius is relative to the coordinate specified by the
#   mesh_origin option. This parameter must be provided for round beds
#   and omitted for rectangular beds.
#mesh_origin:
#   Defines the center x,y coordinate of the mesh for round beds. This
#   coordinate is relative to the probe's location. It may be useful
#   to adjust the mesh_origin in an effort to maximize the size of the
#   mesh radius. Default is 0,0. This parameter must be omitted for
#   rectangular beds.
mesh_min: 1,30 #16,5 
#   Defines the minimum x,y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_max: 207,262
#   Defines the maximum x,y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
probe_count: 5,5
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3,3.
#round_probe_count: 5
#   For round beds, this integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
zero_reference_position: 106,135
split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2,2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
#relative_reference_index:
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.
adaptive_margin: 5

[bed_screws]
screw1:2,28
#   The X,Y coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to that is directly above the bed
#   screw (or as close as possible while still being above the bed).
#   This parameter must be provided.
screw1_name:Front Left
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
#screw1_fine_adjust:
#   An X,Y coordinate to command the nozzle to so that one can fine
#   tune the bed leveling screw. The default is to not perform fine
#   adjustments on the bed screw.
screw2:210,28
screw2_name:Front Right
#screw2_fine_adjust:
# 
screw3:2,238
screw3_name:Back Left
#screw3_fine_adjust:
# 
screw4:210,238
screw4_name:Back Right
#screw4_fine_adjust:
#...
#   Additional bed leveling screws. At least three screws must be
#   defined.
horizontal_move_z: 8
#   The height (in mm) that the head should be commanded to move to
#   when moving from one screw location to the next. The default is 5.
#probe_height: 0
#   The height of the probe (in mm) after adjusting for the thermal
#   expansion of bed and nozzle. The default is zero.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#probe_speed: 5
#   The speed (in mm/s) when moving from a horizontal_move_z position
#   to a probe_height position. The default is 5.

#[z_tilt]
#z_positions:
#    -65, 135
#    285, 135
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
#points: 
#    5, 135
#    205, 135
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
#speed: 80
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.
#retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

#[axis_twist_compensation]
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#calibrate_start_x: 10
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
#calibrate_end_x: 200
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
#calibrate_y: 112.5
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed

[safe_z_home]
home_xy_position: 106,135
#   A X,Y coordinate (e.g. 100,100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 10
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed, then prior to any XY homing
#   movement the Z axis boundary checks are disabled and the head is
#   lifted by z_hop. If z_hop is specified, be sure to home the Z
#   immediately after any XY home requests so that the Z boundary
#   checks are accurate. The default is to not implement Z hop.
z_hop_speed: 8.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 20mm/s.
#move_to_previous: False
#   When set to True, xy are reset to their previous positions after z
#   homing. The default is False.

#[endstop_phase stepper_z]
#endstop_accuracy: 0.04
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase: 45/64 (range 33 to 7)
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
#endstop_align_zero: False
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.

[input_shaper]
shaper_freq_x: 55.0
shaper_type_x: ei
shaper_freq_y: 58.2
shaper_type_y: ei
damping_ratio_x: 0.106
damping_ratio_y: 0.095

#shaper_type_y:mzv shaper_freq_y:47.400 damping_ratio_y:0.100000
#shaper_type_x:ei shaper_freq_x:55.000 damping_ratio_x:0.100000

#To avoid too much smoothing with 'ei', suggested max_accel <= 6300 mm/sec^2
#Fitted shaper 'ei' frequency = 58.2 Hz (vibrations = 0.0%, smoothing ~= 0.095)
#To avoid too much smoothing with 'mzv', suggested max_accel <= 6600 mm/sec^2
#Fitted shaper 'mzv' frequency = 47.4 Hz (vibrations = 0.9%, smoothing ~= 0.091)

#To avoid too much smoothing with 'ei', suggested max_accel <= 5600 mm/sec^2
#Fitted shaper 'ei' frequency = 55.0 Hz (vibrations = 0.0%, smoothing ~= 0.106)
#To avoid too much smoothing with 'mzv', suggested max_accel <= 6500 mm/sec^2
#Fitted shaper 'mzv' frequency = 47.0 Hz (vibrations = 1.4%, smoothing ~= 0.092)

[save_variables]
filename: ~/variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg

[idle_timeout]
gcode: 
    M84
    M104 S0
    M140 S0 
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 900
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[force_move]
enable_force_move: true
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.


#[gcode_arcs]
#resolution: 0.05
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[exclude_object]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.142511, 0.347980, 0.114855, -0.407176
#*# 	  0.131105, 0.346105, 0.231105, -0.174208
#*# 	  0.032667, 0.379699, 0.348292, -0.005614
#*# 	  -0.121239, 0.382667, 0.414230, 0.077199
#*# 	  -0.268114, 0.460480, 0.477511, 0.077199
#*# x_count = 4
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 1.0
#*# max_x = 206.98
#*# min_y = 30.0
#*# max_y = 262.0
